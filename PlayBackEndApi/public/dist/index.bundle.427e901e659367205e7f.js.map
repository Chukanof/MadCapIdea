{"version":3,"sources":["webpack:///webpack:///./src/types.ts","webpack:///webpack:///./src/components/YesNoDialog.tsx","webpack:///webpack:///./src/CreateJob.tsx","webpack:///webpack:///./src/Login.tsx","webpack:///webpack:///./src/Logout.tsx","webpack:///webpack:///./src/Register.tsx","webpack:///webpack:///./src/ViewJob.tsx","webpack:///webpack:///./src/ViewRating.tsx","webpack:///webpack:///./src/ioc/ContainerOperations.ts","webpack:///webpack:///./src/DriverRegistration.tsx","webpack:///webpack:///./src/PassengerRegistration.tsx","webpack:///webpack:///./src/components/RatingDialog.tsx","webpack:///webpack:///./src/domain/Foo.ts","webpack:///webpack:///./src/index.tsx","webpack:///webpack:///./src/services/AuthService.ts","webpack:///webpack:///./src/components/OkDialog.tsx"],"names":[],"mappings":"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","file":"index.bundle.427e901e659367205e7f.js","sourcesContent":["export const TYPES = {\r\n    Foo: Symbol(\"Foo\"),\r\n    SomeNumber: Symbol(\"SomeNumber\"),\r\n\r\n    AuthService: Symbol(\"AuthService\")\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/types.ts\n\n\n// WEBPACK FOOTER //\n// webpack:///./src/types.ts","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport * as _ from \"lodash\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport\r\n{\r\n    Button, \r\n    Modal\r\n} from \"react-bootstrap\";\r\n\r\n\r\nexport interface YesNoDialogProps {\r\n    headerText: string;\r\n    theId: string;\r\n    launchButtonText: string;\r\n    yesCallBack(): void;\r\n    noCallBack(): void;\r\n}\r\n\r\nexport interface YesNoDialogState {\r\n    showModal: boolean;\r\n}\r\n\r\n\r\nexport class YesNoDialog extends React.Component<YesNoDialogProps, YesNoDialogState> {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(this.props);\r\n        //set initial state\r\n        this.state = {\r\n            showModal: false\r\n        };\r\n    }\r\n\r\n    _yesClicked = () => {\r\n        this.setState({ showModal: false });\r\n        this.props.yesCallBack();\r\n    }\r\n\r\n    _noClicked = () => {\r\n        this.setState({ showModal: false });\r\n        this.props.noCallBack();\r\n    }\r\n\r\n    _close = () => {\r\n        this.setState({ showModal: false });\r\n    }\r\n\r\n    _open = () => {\r\n        this.setState({ showModal: true });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"leftFloat\">\r\n\r\n                <Button\r\n                    id={this.props.theId}\r\n                    type='button'\r\n                    bsSize='small'\r\n                    bsStyle='primary'\r\n                    onClick={this._open}>{this.props.launchButtonText}</Button>\r\n\r\n                <Modal show={this.state.showModal} onHide={this._close}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{ this.props.headerText }</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <h4>Are you sure?</h4>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button\r\n                            type='button'\r\n                            bsSize='small'\r\n                            bsStyle='primary'\r\n                            onClick={this._yesClicked}>Yes</Button>\r\n                        <Button\r\n                            type='button'\r\n                            bsSize='small'\r\n                            bsStyle='danger'\r\n                            onClick={this._noClicked}>Cancel</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/YesNoDialog.tsx\n\n\n// WEBPACK FOOTER //\n// webpack:///./src/components/YesNoDialog.tsx","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport * as _ from \"lodash\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport\r\n{\r\n    Well,\r\n    Grid,\r\n    Row,\r\n    Col,\r\n    ButtonInput,\r\n    ButtonGroup,\r\n    Button\r\n} from \"react-bootstrap\";\r\n\r\nimport { withGoogleMap, GoogleMap, Marker, InfoBox } from \"react-google-maps\";\r\n\r\nconst CreateJobGoogleMap = withGoogleMap(props => (\r\n    <GoogleMap\r\n        ref={props.onMapLoad}\r\n        defaultZoom={16}\r\n        defaultCenter={{ lat: 50.8202949, lng: -0.1406958 }}\r\n        onClick={props.onMapClick}>\r\n        <Marker\r\n            position={props.currentPosition}\r\n            icon='/assets/images/passenger.png'>\r\n        </Marker>\r\n    </GoogleMap>\r\n));\r\n\r\n\r\nexport interface CreateJobState {\r\n    currentPosition: {\r\n        lat: number,\r\n        lng: number\r\n    };\r\n}\r\n\r\nexport class CreateJob extends React.Component<undefined, CreateJobState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            currentPosition: { lat: 50.8202949, lng: -0.1406958 }\r\n          };\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Well className=\"outer-well\">\r\n                <Grid>\r\n                    <Row className=\"show-grid\">\r\n                        <Col xs={10} md={6}>\r\n                            <h4>SET YOUR CURRENT LOCATION</h4>\r\n                            <h6>Click the map to set your current location</h6>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"show-grid\">\r\n                        <Col xs={10} md={6}>\r\n                            <CreateJobGoogleMap\r\n                                containerElement={\r\n                                    <div style={{\r\n                                        position: 'relative',\r\n                                        top: 0,\r\n                                        left: 0,\r\n                                        right: 0,\r\n                                        bottom: 0,\r\n                                        width: 600,\r\n                                        height: 600,\r\n                                        justifyContent: 'flex-end',\r\n                                        alignItems: 'center',\r\n                                        marginTop: 20,\r\n                                        marginLeft: 0,\r\n                                        marginRight: 0,\r\n                                        marginBottom: 20\r\n                                    }} />\r\n                                }\r\n                                mapElement={\r\n                                    <div style={{\r\n                                        position: 'relative',\r\n                                        top: 0,\r\n                                        left: 0,\r\n                                        right: 0,\r\n                                        bottom: 0,\r\n                                        width: 600,\r\n                                        height: 600,\r\n                                        marginTop: 20,\r\n                                        marginLeft: 0,\r\n                                        marginRight: 0,\r\n                                        marginBottom: 20\r\n                                    }} />\r\n                                }\r\n                                onMapLoad={this._handleMapLoad}\r\n                                onMapClick={this._handleMapClick}\r\n                                currentPosition={this.state.currentPosition}\r\n                                />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"show-grid\">\r\n                        <ButtonInput\r\n                            id=\"createJobBtn\"\r\n                            type='submit'\r\n                            bsSize='small'\r\n                            bsStyle='primary'\r\n                            value='Register'>Create Job</ButtonInput>\r\n                    </Row>\r\n                </Grid>\r\n            </Well>\r\n        );\r\n    }\r\n\r\n    _handleMapLoad = (map) => {\r\n        if (map) {\r\n            console.log(map.getZoom());\r\n        }\r\n    }\r\n\r\n    _handleMapClick = (event) => {\r\n        this.setState({\r\n            currentPosition: event.latLng\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/CreateJob.tsx\n\n\n// WEBPACK FOOTER //\n// webpack:///./src/CreateJob.tsx","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport { OkDialog } from \"./components/OkDialog\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport\r\n{\r\n    Well,\r\n    Grid,\r\n    Row,\r\n    Col,\r\n    ButtonInput\r\n} from \"react-bootstrap\";\r\n\r\nimport { Form, ValidatedInput } from 'react-bootstrap-validation';\r\nimport revalidator from 'revalidator';\r\nimport { AuthService } from \"./services/AuthService\";\r\n\r\nlet schema = {\r\n    properties: {\r\n        email: {\r\n            type: 'string',\r\n            maxLength: 255,\r\n            format: 'email',\r\n            required: true,\r\n            allowEmpty: false\r\n        },\r\n        password: {\r\n            type: 'string',\r\n            minLength: 8,\r\n            maxLength: 60,\r\n            required: true,\r\n            allowEmpty: false\r\n        }\r\n    }\r\n};\r\n\r\nexport interface LoginState {\r\n    okDialogOpen: boolean;\r\n    okDialogKey: number;\r\n    okDialogHeaderText: string;\r\n    okDialogBodyText: string;\r\n}\r\n\r\nexport class Login extends React.Component<undefined, LoginState> {\r\n\r\n    private _authService: AuthService;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        console.log(props);\r\n        this._authService = props.route.authService;\r\n        this.state = {\r\n            okDialogHeaderText: '',\r\n            okDialogBodyText: '',\r\n            okDialogOpen: false,\r\n            okDialogKey: 0\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Well className=\"outer-well\">\r\n                <Form\r\n                    // Supply callbacks to both valid and invalid\r\n                    // submit attempts\r\n                    validateAll={this._validateForm}\r\n                    onInvalidSubmit={this._handleInvalidSubmit}\r\n                    onValidSubmit={this._handleValidSubmit}>\r\n                    <Grid>\r\n                        <Row className=\"show-grid\">\r\n                            <Col xs={10} md={6}>\r\n                                <h4>ENTER YOUR LOGIN DETAILS</h4>\r\n                                <span><h6>Or click <a href=\"#/register\">here</a> to register</h6></span>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"show-grid\">\r\n                            <Col xs={10} md={6}>\r\n                                <ValidatedInput type='text'\r\n                                    label='Email'\r\n                                    name='email'\r\n                                    errorHelp='Email address is invalid'/>\r\n\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"show-grid\">\r\n                            <Col xs={10} md={6}>\r\n                                <ValidatedInput type='password'\r\n                                    name='password'\r\n                                    label='Password'\r\n                                    errorHelp='Password is invalid'/>\r\n\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"show-grid\">\r\n                            <Col xs={10} md={6}>\r\n                                <ValidatedInput\r\n                                    type='checkbox'\r\n                                    name='isDriver'\r\n                                    label='Are you a driver?'\r\n                                    />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"show-grid\">\r\n                            <Col xs={10} md={6}>\r\n                                <ButtonInput\r\n                                    id=\"loginBtn\"\r\n                                    type='submit'\r\n                                    bsSize='small'\r\n                                    bsStyle='primary'\r\n                                    value='Register'>Login</ButtonInput>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"show-grid\">\r\n                            <span>\r\n                                <OkDialog\r\n                                    open= {this.state.okDialogOpen}\r\n                                    okCallBack= {this._okDialogCallBack}\r\n                                    headerText={this.state.okDialogHeaderText}\r\n                                    bodyText={this.state.okDialogBodyText}\r\n                                    key={this.state.okDialogKey}/>\r\n                            </span>\r\n                        </Row>\r\n                    </Grid>\r\n                </Form>\r\n            </Well>\r\n        )\r\n    }\r\n\r\n    _validateForm = (values) => {\r\n        let res = revalidator.validate(values, schema);\r\n\r\n        // If the values passed validation, we return true\r\n        if (res.valid) {\r\n            return true;\r\n        }\r\n\r\n        // Otherwise we should return an object containing errors\r\n        // e.g. { email: true, password: true }\r\n        return res.errors.reduce((errors, error) => {\r\n            // Set each property to either true or\r\n            // a string error description\r\n            errors[error.property] = true;\r\n\r\n            return errors;\r\n        }, {});\r\n    }\r\n\r\n    _handleInvalidSubmit = (errors, values) => {\r\n\r\n        console.log(values);\r\n\r\n        // Errors is an array containing input names\r\n        // that failed to validate\r\n        this.setState(\r\n            {\r\n                okDialogHeaderText: 'Validation Error',\r\n                okDialogBodyText: 'Form has errors and may not be submitted',\r\n                okDialogOpen: true,\r\n                okDialogKey: Math.random()\r\n            });\r\n    }\r\n\r\n    _handleValidSubmit = (values) => {\r\n        var logindetails = values;\r\n        var self = this;\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            url: 'login/validate',\r\n            data: JSON.stringify(logindetails),\r\n            contentType: \"application/json; charset=utf-8\",\r\n            dataType: 'json'\r\n        })\r\n        .done(function (jdata, textStatus, jqXHR) {\r\n\r\n            console.log(\"result of login\");\r\n            console.log(jqXHR.responseText);\r\n            let currentUser = jqXHR.responseText;\r\n            self._authService.storeUser(currentUser);\r\n\r\n            self.setState(\r\n                {\r\n                    okDialogHeaderText: 'Login Successful',\r\n                    okDialogBodyText: 'You are now logged in',\r\n                    okDialogOpen: true,\r\n                    okDialogKey: Math.random()\r\n                });\r\n        })\r\n        .fail(function (jqXHR, textStatus, errorThrown) {\r\n            self.setState(\r\n                {\r\n                    okDialogHeaderText: 'Error',\r\n                    okDialogBodyText: jqXHR.responseText,\r\n                    okDialogOpen: true,\r\n                    okDialogKey: Math.random()\r\n                });\r\n        });\r\n    }\r\n\r\n    _okDialogCallBack = () => {\r\n        this.setState(\r\n            {\r\n                okDialogOpen: false\r\n            });\r\n    }\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Login.tsx\n\n\n// WEBPACK FOOTER //\n// webpack:///./src/Login.tsx","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport { hashHistory  } from 'react-router'\r\nimport { OkDialog } from \"./components/OkDialog\";\r\nimport { YesNoDialog } from \"./components/YesNoDialog\";\r\nimport { AuthService } from \"./services/AuthService\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport\r\n{\r\n    Well,\r\n    Grid,\r\n    Row,\r\n    Col,\r\n    ButtonInput\r\n} from \"react-bootstrap\";\r\n\r\nexport interface LogoutState {\r\n    okDialogOpen: boolean;\r\n    okDialogKey: number;\r\n    okDialogHeaderText: string;\r\n    okDialogBodyText: string;\r\n}\r\n\r\nexport class Logout extends React.Component<undefined, LogoutState> {\r\n\r\n    private _authService: AuthService;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        console.log(props);\r\n        this._authService = props.route.authService;\r\n        if (!this._authService.isAuthenticated()) {\r\n            hashHistory.push('/');\r\n        }\r\n\r\n        this.state = {\r\n            okDialogHeaderText: '',\r\n            okDialogBodyText: '',\r\n            okDialogOpen: false,\r\n            okDialogKey: 0\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Well className=\"outer-well\">\r\n                <Grid>\r\n                    <Row className=\"show-grid\">\r\n                        <Col xs={10} md={6}>\r\n                            <h4><span>YOU ARE CURRENTLY LOGGED IN AS [{this._authService.userName()}]</span></h4>\r\n                            <span><h6>Click the button to logout</h6></span>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"show-grid\">\r\n                        <span>\r\n                            <YesNoDialog\r\n                                theId=\"logoutBtn\"\r\n                                launchButtonText=\"Logout\"\r\n                                yesCallBack={this._logoutYesCallBack}\r\n                                noCallBack={this._logoutNoCallBack}\r\n                                headerText=\"Cancel the job\"/>\r\n\r\n                            <OkDialog\r\n                                open= {this.state.okDialogOpen}\r\n                                okCallBack= {this._okDialogCallBack}\r\n                                headerText={this.state.okDialogHeaderText}\r\n                                bodyText={this.state.okDialogBodyText}\r\n                                key={this.state.okDialogKey}/>\r\n                        </span>\r\n                    </Row>\r\n                </Grid>\r\n            </Well>\r\n        )\r\n    }\r\n\r\n    _okDialogCallBack = () => {\r\n        this.setState(\r\n            {\r\n                okDialogOpen: false\r\n            });\r\n    }\r\n\r\n     _logoutYesCallBack = () => {\r\n         this._authService.clearUser();\r\n         this.setState(\r\n             {\r\n                 okDialogHeaderText: 'Logout',\r\n                 okDialogBodyText: 'You have been logged out',\r\n                 okDialogOpen: true,\r\n                 okDialogKey: Math.random()\r\n             });\r\n     }\r\n\r\n     _logoutNoCallBack = () => {\r\n     }\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Logout.tsx\n\n\n// WEBPACK FOOTER //\n// webpack:///./src/Logout.tsx","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport\r\n{\r\n    Well,\r\n    Grid,\r\n    Row,\r\n    Col,\r\n    ButtonInput,\r\n    ButtonGroup,\r\n    Button\r\n} from \"react-bootstrap\";\r\nimport { PassengerRegistration } from \"./PassengerRegistration\";\r\nimport { DriverRegistration } from \"./DriverRegistration\";\r\n\r\n\r\nexport interface RegisterState {\r\n    option: string;\r\n}\r\n\r\nexport class Register extends React.Component<undefined, RegisterState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            option: 'passenger'\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Well className=\"outer-well\">\r\n                <Grid>\r\n                    <Row className=\"show-grid\">\r\n                        <Col xs={10} md={6}>\r\n                            <h4>PLEASE ENTER YOUR REGISTRATION DETAILS</h4>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"show-grid\">\r\n                        <Col xs={10} md={6}>\r\n                            <h6>Choose your registration type </h6>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"show-grid\">\r\n                        <Col xs={10} md={6}>\r\n                            <ButtonGroup>\r\n                                <Button bsSize='small' onClick={this._onOptionChange.bind(this, 'passenger') } active={this.state.option === 'passenger'}>Passenger</Button>\r\n                                <Button bsSize='small' onClick={this._onOptionChange.bind(this, 'driver') } active={this.state.option === 'driver'}>Driver</Button>\r\n                            </ButtonGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"show-grid\">\r\n                        <Col xs={10} md={6}>\r\n                            {this.state.option === 'passenger' ?\r\n                                <div><PassengerRegistration/></div> :\r\n                                <div><DriverRegistration/></div>\r\n                            }\r\n                        </Col>\r\n                    </Row>\r\n                </Grid>\r\n            </Well>\r\n        )\r\n    }\r\n\r\n    _onOptionChange(option) {\r\n        this.setState({\r\n            option: option\r\n        });\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Register.tsx\n\n\n// WEBPACK FOOTER //\n// webpack:///./src/Register.tsx","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport * as _ from \"lodash\";\r\n\r\nimport { RatingDialog } from \"./components/RatingDialog\";\r\nimport { YesNoDialog } from \"./components/YesNoDialog\";\r\nimport { OkDialog } from \"./components/OkDialog\";\r\n\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport\r\n{\r\n    Well,\r\n    Grid,\r\n    Row,\r\n    Col,\r\n    ButtonInput,\r\n    ButtonGroup,\r\n    Button, \r\n    Modal,\r\n    Popover,\r\n    Tooltip,\r\n    OverlayTrigger\r\n} from \"react-bootstrap\";\r\n\r\nimport { withGoogleMap, GoogleMap, Marker, OverlayView } from \"react-google-maps\";\r\n\r\nconst STYLES = {\r\n    overlayView: {\r\n        background: `white`,\r\n        border: `1px solid #ccc`,\r\n        padding: 15,\r\n    }\r\n}\r\n\r\n\r\nconst GetPixelPositionOffset = (width, height) => {\r\n    return { x: -(width / 2), y: -(height / 2) };\r\n}\r\n\r\n\r\n\r\nconst ViewJobGoogleMap = withGoogleMap(props => (\r\n    <GoogleMap\r\n        ref={props.onMapLoad}\r\n        defaultZoom={14}\r\n        defaultCenter={{ lat: 50.8202949, lng: -0.1406958 }}>\r\n\r\n\r\n        {props.markers.map((marker, index) => (\r\n            <OverlayView\r\n                key={marker.key}\r\n                mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\r\n                position={marker.position}\r\n                getPixelPositionOffset={GetPixelPositionOffset}>\r\n                <div style={STYLES.overlayView}>\r\n                    <img src={marker.icon} />\r\n                    <strong>{marker.key}</strong>\r\n                    <br/>\r\n                    <Button\r\n                        type='button'\r\n                        bsSize='xsmall'\r\n                        bsStyle='primary'\r\n                        onClick={() => props.onMarkerClick(marker) }\r\n                        value='Accept'>Accept</Button>\r\n                </div>\r\n            </OverlayView>\r\n        )) }\r\n    </GoogleMap>\r\n));\r\n\r\nexport interface ViewJobState {\r\n    markers: [\r\n        {\r\n            position: {\r\n                lat: number,\r\n                lng: number\r\n            },\r\n            key: string,\r\n            icon:string\r\n        }\r\n    ];\r\n    okDialogOpen: boolean;\r\n    okDialogKey: number;\r\n    okDialogHeaderText: string;\r\n    okDialogBodyText: string;\r\n}\r\n\r\nexport class ViewJob extends React.Component<undefined, ViewJobState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            markers: [{\r\n                    position: {\r\n                        lat: 50.8202949,\r\n                        lng: -0.1406958\r\n                    },\r\n                    key: 'driver_1',\r\n                    icon: '/assets/images/driver.png'\r\n                },\r\n                {\r\n                    position: {\r\n                        lat: 50.8128187,\r\n                        lng: -0.1361418\r\n                    },\r\n                    key: 'driver_2',\r\n                    icon: '/assets/images/driver.png'\r\n                }\r\n            ],\r\n            okDialogHeaderText: '',\r\n            okDialogBodyText: '',\r\n            okDialogOpen: false,\r\n            okDialogKey:0\r\n        };\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Well className=\"outer-well\">\r\n                <Grid>\r\n                    <Row className=\"show-grid\">\r\n                        <Col xs={10} md={6}>\r\n                            <h4>CURRENT JOB</h4>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"show-grid\">\r\n                        <Col xs={10} md={6}>\r\n                            <ViewJobGoogleMap\r\n                                containerElement={\r\n                                    <div style={{\r\n                                        position: 'relative',\r\n                                        top: 0,\r\n                                        left: 0,\r\n                                        right: 0,\r\n                                        bottom: 0,\r\n                                        width: 600,\r\n                                        height: 600,\r\n                                        justifyContent: 'flex-end',\r\n                                        alignItems: 'center',\r\n                                        marginTop: 20,\r\n                                        marginLeft: 0,\r\n                                        marginRight: 0,\r\n                                        marginBottom: 20\r\n                                    }} />\r\n                                }\r\n                                mapElement={\r\n                                    <div style={{\r\n                                        position: 'relative',\r\n                                        top: 0,\r\n                                        left: 0,\r\n                                        right: 0,\r\n                                        bottom: 0,\r\n                                        width: 600,\r\n                                        height: 600,\r\n                                        marginTop: 20,\r\n                                        marginLeft: 0,\r\n                                        marginRight: 0,\r\n                                        marginBottom: 20\r\n                                    }} />\r\n                                }\r\n                                markers={this.state.markers}\r\n                                onMarkerClick={this._handleClick}/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"show-grid\">\r\n                        <span>\r\n                            <RatingDialog\r\n                                theId=\"viewJobCompleteBtn\"\r\n                                headerText=\"Rate your driver/passenger\"\r\n                                okCallBack= {this._ratingsDialogOkCallBack}/>\r\n\r\n                            <YesNoDialog\r\n                                theId=\"viewJobCancelBtn\"\r\n                                launchButtonText=\"Cancel\"\r\n                                yesCallBack={this._jobCancelledCallBack}\r\n                                noCallBack={this._jobNotCancelledCallBack}\r\n                                headerText=\"Cancel the job\"/>\r\n\r\n                            <OkDialog\r\n                                open= {this.state.okDialogOpen}\r\n                                okCallBack= {this._okDialogCallBack}\r\n                                headerText={this.state.okDialogHeaderText}\r\n                                bodyText={this.state.okDialogBodyText}\r\n                                key={this.state.okDialogKey}/>\r\n                        </span>\r\n                    </Row>\r\n                </Grid>\r\n            </Well>\r\n        );\r\n    }\r\n\r\n    _handleClick = (targetMarker) => {\r\n        console.log('button on overlay clicked:' + targetMarker.key);\r\n    }\r\n\r\n    _ratingsDialogOkCallBack = () => {\r\n        console.log('RATINGS OK CLICKED');\r\n        this.setState(\r\n            {\r\n                okDialogHeaderText: 'Ratings',\r\n                okDialogBodyText: 'Rating successfully recorded',\r\n                okDialogOpen: true,\r\n                okDialogKey: Math.random()\r\n            });\r\n    }\r\n\r\n    _jobCancelledCallBack = () => {\r\n        console.log('YES CLICKED');\r\n        this.setState(\r\n            {\r\n                okDialogHeaderText: 'Job Cancellaton',\r\n                okDialogBodyText: 'Job successfully cancelled',\r\n                okDialogOpen: true,\r\n                okDialogKey: Math.random() \r\n            });\r\n    }\r\n\r\n    _jobNotCancelledCallBack = () => {\r\n        console.log('NO CLICKED');\r\n        this.setState(\r\n            {\r\n                okDialogHeaderText: 'Job Cancellaton',\r\n                okDialogBodyText: 'Job remains open',\r\n                okDialogOpen: true,\r\n                okDialogKey: Math.random() \r\n            });\r\n    }\r\n\r\n    _okDialogCallBack = () => {\r\n        console.log('OK on OkDialog CLICKED');\r\n        this.setState(\r\n            {\r\n                okDialogOpen: false\r\n            });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ViewJob.tsx\n\n\n// WEBPACK FOOTER //\n// webpack:///./src/ViewJob.tsx","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport\r\n{\r\n    Well,\r\n    Grid,\r\n    Row,\r\n    Col,\r\n    Label\r\n} from \"react-bootstrap\";\r\n\r\n\r\nexport class ViewRating extends React.Component<undefined, undefined> {\r\n    render() {\r\n        return (\r\n            <Well className=\"outer-well\">\r\n                    <Grid>\r\n                        <Row className=\"show-grid\">\r\n                            <Col xs={6} md={6}>\r\n                                <div>\r\n                                    <h4>YOUR RANKING <Label>4.2</Label></h4>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"show-grid\">\r\n                            <Col xs={10} md={6}>\r\n                                <h6>The finer details of your ranking are shown below</h6>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"show-grid\">\r\n                            <Col xs={10} md={6}>\r\n                                <div className=\"table-responsive\">\r\n                                    <table className=\"table table-striped table-bordered table-condensed factTable\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Ranked By</th>\r\n                                                <th>Rank Given</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>John Doe</td>\r\n                                                <td>4.2</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Mary Moe</td>\r\n                                                <td>4.7</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>July Dooley</td>\r\n                                                <td>4.5</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Grid>\r\n            </Well>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ViewRating.tsx\n\n\n// WEBPACK FOOTER //\n// webpack:///./src/ViewRating.tsx","import \"reflect-metadata\";\r\nimport { Container } from \"inversify\";\r\nimport { TYPES } from \"../types\";\r\nimport { Foo } from \"../domain/Foo\";\r\nimport { AuthService } from \"../services/AuthService\";\r\n\r\n\r\nexport class ContainerOperations {\r\n    private static instance: ContainerOperations;\r\n    private _container:Container = new Container();\r\n\r\n    private constructor() {\r\n        \r\n    }\r\n\r\n    static getInstance() {\r\n        if (!ContainerOperations.instance) {\r\n            ContainerOperations.instance = new ContainerOperations();\r\n            ContainerOperations.instance.createInversifyContainer();\r\n        }\r\n        return ContainerOperations.instance;\r\n    }\r\n\r\n    private createInversifyContainer() {\r\n        this.container.bind<number>(TYPES.SomeNumber).toConstantValue(22);\r\n        this.container.bind<Foo>(TYPES.Foo).to(Foo);\r\n        this.container.bind<AuthService>(TYPES.AuthService).to(AuthService);\r\n    }\r\n\r\n    public get container(): Container {\r\n        return this._container;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/ioc/ContainerOperations.ts\n\n\n// WEBPACK FOOTER //\n// webpack:///./src/ioc/ContainerOperations.ts","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport { OkDialog } from \"./components/OkDialog\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport\r\n{\r\n    Well,\r\n    Grid,\r\n    Row,\r\n    Col,\r\n    ButtonInput\r\n} from \"react-bootstrap\";\r\nimport { Form, ValidatedInput } from 'react-bootstrap-validation';\r\nimport revalidator from 'revalidator';\r\n\r\n\r\nlet schema = {\r\n    properties: {\r\n        fullname: {\r\n            type: 'string',\r\n            minLength: 8,\r\n            maxLength: 12,\r\n            required: true,\r\n            allowEmpty: false\r\n        },\r\n        email: {\r\n            type: 'string',\r\n            maxLength: 255,\r\n            format: 'email',\r\n            required: true,\r\n            allowEmpty: false\r\n        },\r\n        password: {\r\n            type: 'string',\r\n            minLength: 8,\r\n            maxLength: 60,\r\n            required: true,\r\n            allowEmpty: false\r\n        },\r\n        vehicleDescription: {\r\n            type: 'string',\r\n            minLength: 6,\r\n            maxLength: 60,\r\n            required: true,\r\n            allowEmpty: false\r\n        },\r\n        vehicleRegistrationNumber: {\r\n            type: 'string',\r\n            minLength: 6,\r\n            maxLength: 30,\r\n            required: true,\r\n            allowEmpty: false\r\n        }\r\n    }\r\n};\r\n\r\nexport interface DriverRegistrationState {\r\n    okDialogOpen: boolean;\r\n    okDialogKey: number;\r\n    okDialogHeaderText: string;\r\n    okDialogBodyText: string;\r\n}\r\n\r\nexport class DriverRegistration extends React.Component<undefined, DriverRegistrationState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            okDialogHeaderText: '',\r\n            okDialogBodyText: '',\r\n            okDialogOpen: false,\r\n            okDialogKey: 0\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form className=\"submittable-form-inner\"\r\n                // Supply callbacks to both valid and invalid\r\n                // submit attempts\r\n                validateAll={this._validateForm}\r\n                onInvalidSubmit={this._handleInvalidSubmit}\r\n                onValidSubmit={this._handleValidSubmit}>\r\n                <Grid>\r\n                    <Row className=\"show-grid\">\r\n                        <Col xs={10} md={6}>\r\n                            <h4>Driver details</h4>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"show-grid\">\r\n                        <Col xs={10} md={6}>\r\n                            <ValidatedInput type='text'\r\n                                label='FullName'\r\n                                name='fullname'\r\n                                errorHelp='FullName is invalid'/>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"show-grid\">\r\n                        <Col xs={10} md={6}>\r\n                            <ValidatedInput type='text'\r\n                                label='Email'\r\n                                name='email'\r\n                                errorHelp='Email address is invalid'/>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"show-grid\">\r\n                        <Col xs={10} md={6}>\r\n                            <ValidatedInput type='password'\r\n                                name='password'\r\n                                label='Password'\r\n                                errorHelp='Password is invalid'/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"show-grid\">\r\n                        <Col xs={10} md={6}>\r\n                            <h4>Vehicle details</h4>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"show-grid\">\r\n                        <Col xs={10} md={6}>\r\n                            <ValidatedInput type='text'\r\n                                label='Vehicle Description'\r\n                                name='vehicleDescription'\r\n                                errorHelp='Vehicle description is invalid'/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"show-grid\">\r\n                        <Col xs={10} md={6}>\r\n                            <ValidatedInput type='text'\r\n                                label='Vehicle Registration Number'\r\n                                name='vehicleRegistrationNumber'\r\n                                errorHelp='Vehicle registration number is invalid'/>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row className=\"show-grid\">\r\n                        <Col xs={10} md={6}>\r\n                            <ButtonInput\r\n                                id=\"registerBtn\"\r\n                                type='submit'\r\n                                bsSize='small'\r\n                                bsStyle='primary'\r\n                                value='Register'>Register</ButtonInput>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"show-grid\">\r\n                        <span>\r\n                            <OkDialog\r\n                                open= {this.state.okDialogOpen}\r\n                                okCallBack= {this._okDialogCallBack}\r\n                                headerText={this.state.okDialogHeaderText}\r\n                                bodyText={this.state.okDialogBodyText}\r\n                                key={this.state.okDialogKey}/>\r\n                        </span>\r\n                    </Row>\r\n                </Grid>\r\n            </Form>\r\n        )\r\n    }\r\n\r\n\r\n    _validateForm = (values) => {\r\n        let res = revalidator.validate(values, schema);\r\n\r\n        // If the values passed validation, we return true\r\n        if (res.valid) {\r\n            return true;\r\n        }\r\n\r\n        // Otherwise we should return an object containing errors\r\n        // e.g. { email: true, password: true }\r\n        return res.errors.reduce((errors, error) => {\r\n            // Set each property to either true or\r\n            // a string error description\r\n            errors[error.property] = true;\r\n\r\n            return errors;\r\n        }, {});\r\n    }\r\n\r\n    _handleInvalidSubmit = (errors, values) => {\r\n        // Errors is an array containing input names\r\n        // that failed to validate\r\n        this.setState(\r\n            {\r\n                okDialogHeaderText: 'Validation Error',\r\n                okDialogBodyText: 'Form has errors and may not be submitted',\r\n                okDialogOpen: true,\r\n                okDialogKey: Math.random()\r\n            });\r\n    }\r\n\r\n    _handleValidSubmit = (values) => {\r\n        var driver = values;\r\n        var self = this;\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            url: 'registration/save/driver',\r\n            data: JSON.stringify(driver),\r\n            contentType: \"application/json; charset=utf-8\",\r\n            dataType: 'json'\r\n        })\r\n        .done(function (jdata, textStatus, jqXHR) {\r\n            self.setState(\r\n                {\r\n                    okDialogHeaderText: 'Registration Successful',\r\n                    okDialogBodyText: 'You are now registered',\r\n                    okDialogOpen: true,\r\n                    okDialogKey: Math.random()\r\n                });\r\n        })\r\n        .fail(function (jqXHR, textStatus, errorThrown) {\r\n            self.setState(\r\n                {\r\n                    okDialogHeaderText: 'Error',\r\n                    okDialogBodyText: jqXHR.responseText,\r\n                    okDialogOpen: true,\r\n                    okDialogKey: Math.random()\r\n                });\r\n        });\r\n    }\r\n\r\n    _okDialogCallBack = () => {\r\n        this.setState(\r\n            {\r\n                okDialogOpen: false\r\n            });\r\n    }\r\n\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/DriverRegistration.tsx\n\n\n// WEBPACK FOOTER //\n// webpack:///./src/DriverRegistration.tsx","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport { OkDialog } from \"./components/OkDialog\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport\r\n{\r\n    Well,\r\n    Grid,\r\n    Row,\r\n    Col,\r\n    ButtonInput\r\n} from \"react-bootstrap\";\r\nimport { Form, ValidatedInput } from 'react-bootstrap-validation';\r\nimport revalidator from 'revalidator';\r\n\r\n\r\nlet schema = {\r\n    properties: {\r\n        fullname: {\r\n            type: 'string',\r\n            minLength: 8,\r\n            maxLength: 12,\r\n            required: true,\r\n            allowEmpty: false\r\n        },\r\n        email: {\r\n            type: 'string',\r\n            maxLength: 255,\r\n            format: 'email',\r\n            required: true,\r\n            allowEmpty: false\r\n        },\r\n        password: {\r\n            type: 'string',\r\n            minLength: 8,\r\n            maxLength: 60,\r\n            required: true,\r\n            allowEmpty: false\r\n        }\r\n    }\r\n};\r\n\r\nexport interface PassengerRegistrationState {\r\n    okDialogOpen: boolean;\r\n    okDialogKey: number;\r\n    okDialogHeaderText: string;\r\n    okDialogBodyText: string;\r\n}\r\n\r\nexport class PassengerRegistration extends React.Component<undefined, PassengerRegistrationState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            okDialogHeaderText: '',\r\n            okDialogBodyText: '',\r\n            okDialogOpen: false,\r\n            okDialogKey: 0\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form className=\"submittable-form-inner\"\r\n                // Supply callbacks to both valid and invalid\r\n                // submit attempts\r\n                validateAll={this._validateForm}\r\n                onInvalidSubmit={this._handleInvalidSubmit}\r\n                onValidSubmit={this._handleValidSubmit}>\r\n                <Grid>\r\n                    <Row className=\"show-grid\">\r\n                        <Col xs={10} md={6}>\r\n                            <h4>Passenger details</h4>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"show-grid\">\r\n                        <Col xs={10} md={6}>\r\n                            <ValidatedInput type='text'\r\n                                label='FullName'\r\n                                name='fullname'\r\n                                errorHelp='FullName is invalid'/>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"show-grid\">\r\n                        <Col xs={10} md={6}>\r\n                            <ValidatedInput type='text'\r\n                                label='Email'\r\n                                name='email'\r\n                                errorHelp='Email address is invalid'/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"show-grid\">\r\n                        <Col xs={10} md={6}>\r\n                            <ValidatedInput type='password'\r\n                                label='Password'\r\n                                name='password'\r\n                                errorHelp='Password is invalid'/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"show-grid\">\r\n                        <Col xs={10} md={6}>\r\n                            <ButtonInput\r\n                                id=\"registerBtn\"\r\n                                type='submit'\r\n                                bsSize='small'\r\n                                bsStyle='primary'\r\n                                value='Register'>Register</ButtonInput>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"show-grid\">\r\n                        <span>\r\n                            <OkDialog\r\n                                open= {this.state.okDialogOpen}\r\n                                okCallBack= {this._okDialogCallBack}\r\n                                headerText={this.state.okDialogHeaderText}\r\n                                bodyText={this.state.okDialogBodyText}\r\n                                key={this.state.okDialogKey}/>\r\n                        </span>\r\n                    </Row>\r\n                </Grid>\r\n            </Form>\r\n        )\r\n    }\r\n\r\n    _validateForm = (values) => {\r\n        let res = revalidator.validate(values, schema);\r\n\r\n        // If the values passed validation, we return true\r\n        if (res.valid) {\r\n            return true;\r\n        }\r\n\r\n        // Otherwise we should return an object containing errors\r\n        // e.g. { email: true, password: true }\r\n        return res.errors.reduce((errors, error) => {\r\n            // Set each property to either true or\r\n            // a string error description\r\n            errors[error.property] = true;\r\n\r\n            return errors;\r\n        }, {});\r\n    }\r\n\r\n    _handleInvalidSubmit = (errors, values) => {\r\n        // Errors is an array containing input names\r\n        // that failed to validate\r\n        this.setState(\r\n            {\r\n                okDialogHeaderText: 'Validation Error',\r\n                okDialogBodyText: 'Form has errors and may not be submitted',\r\n                okDialogOpen: true,\r\n                okDialogKey: Math.random()\r\n            });\r\n    }\r\n\r\n    _handleValidSubmit = (values) => {\r\n        var passenger = values;\r\n        var self = this;\r\n               \r\n        $.ajax({\r\n            type: 'POST',\r\n            url: 'registration/save/passenger',\r\n            data: JSON.stringify(passenger),\r\n            contentType: \"application/json; charset=utf-8\",\r\n            dataType: 'json'\r\n        })\r\n        .done(function (jdata, textStatus, jqXHR) {\r\n            self.setState(\r\n                {\r\n                    okDialogHeaderText: 'Registration Successful',\r\n                    okDialogBodyText: 'You are now registered',\r\n                    okDialogOpen: true,\r\n                    okDialogKey: Math.random()\r\n                });\r\n        })\r\n        .fail(function (jqXHR, textStatus, errorThrown) {\r\n            self.setState(\r\n                {\r\n                    okDialogHeaderText: 'Error',\r\n                    okDialogBodyText: jqXHR.responseText,\r\n                    okDialogOpen: true,\r\n                    okDialogKey: Math.random()\r\n                });\r\n        });\r\n    }\r\n\r\n    _okDialogCallBack = () => {\r\n        this.setState(\r\n            {\r\n                okDialogOpen: false\r\n            });\r\n    }\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/PassengerRegistration.tsx\n\n\n// WEBPACK FOOTER //\n// webpack:///./src/PassengerRegistration.tsx","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport * as _ from \"lodash\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport\r\n{\r\n    Button,\r\n    Modal\r\n} from \"react-bootstrap\";\r\n\r\n\r\nimport ReactStars from 'react-stars';\r\n\r\n\r\nexport interface RatingDialogProps {\r\n    headerText: string;\r\n    theId: string;\r\n    okCallBack() : void;\r\n}\r\n\r\nexport interface RatingDialogState {\r\n    showModal: boolean;\r\n    rating: number;\r\n    ratingText: string;\r\n}\r\n\r\n\r\nexport class RatingDialog extends React.Component<RatingDialogProps, RatingDialogState> {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(this.props);\r\n        //set initial state\r\n        this.state = {\r\n            showModal: false,\r\n            rating:0,\r\n            ratingText:''\r\n        };\r\n    }\r\n\r\n    _close = () => {\r\n        this.setState(\r\n        {\r\n            showModal: false,\r\n            rating:0,\r\n            ratingText:''\r\n        });\r\n    }\r\n\r\n    _open = () => {\r\n        this.setState(\r\n        {\r\n            showModal: true,\r\n            rating: 0,\r\n            ratingText:'Current rating 0'\r\n        });\r\n    }\r\n\r\n    _ratingChanged = (newRating) => {\r\n        console.log(newRating)\r\n        this.setState(\r\n            {\r\n                rating: newRating,\r\n                ratingText:'Current rating ' + newRating\r\n            });\r\n    }\r\n\r\n    _okClicked = () => {\r\n        this._close();\r\n        this.props.okCallBack();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n        <div className=\"leftFloat\">\r\n\r\n            <Button id={this.props.theId}\r\n                    type='button'\r\n                    bsSize='small'\r\n                    bsStyle='primary'\r\n                    onClick={this._open}>\r\n                Complete\r\n            </Button>\r\n\r\n            <Modal show={this.state.showModal} onHide={this._close}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{ this.props.headerText }</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Give your rating between 1-5</h4>\r\n                    <h5>{this.state.ratingText}</h5>\r\n                    <ReactStars count={5}\r\n                                onChange={this._ratingChanged}\r\n                                size={24}\r\n                                color2={'#ffd700'} />\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button type='submit'\r\n                            bsSize='small'\r\n                            bsStyle='primary'\r\n                            onClick={this._okClicked}>\r\n                        Ok\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/RatingDialog.tsx\n\n\n// WEBPACK FOOTER //\n// webpack:///./src/components/RatingDialog.tsx","import { injectable, inject } from \"inversify\";\r\nimport { TYPES } from \"../types\";\r\n\r\n@injectable()\r\nexport class Foo {\r\n\r\n    private _num: number;\r\n\r\n    constructor(@inject(TYPES.SomeNumber) num: number) {\r\n        this._num = num;\r\n    }\r\n\r\n    getNum() {\r\n        return this._num * 2;\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/domain/Foo.ts\n\n\n// WEBPACK FOOTER //\n// webpack:///./src/domain/Foo.ts","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {\r\n    Nav,\r\n    Navbar,\r\n    NavItem,\r\n    NavDropdown,\r\n    MenuItem,\r\n    Button} from \"react-bootstrap\";\r\n\r\nimport { Router, Route, hashHistory  } from 'react-router'\r\n\r\nimport { Login } from \"./Login\";\r\nimport { Logout } from \"./Logout\";\r\nimport { Register } from \"./Register\";\r\nimport { CreateJob } from \"./CreateJob\";\r\nimport { ViewJob } from \"./ViewJob\";\r\nimport { ViewRating } from \"./ViewRating\";\r\n\r\nimport { ContainerOperations } from \"./ioc/ContainerOperations\"; \r\nimport { AuthService } from \"./services/AuthService\";\r\nimport { TYPES } from \"./types\";\r\n\r\n\r\nlet authService = ContainerOperations.getInstance().container.get<AuthService>(TYPES.AuthService);\r\n\r\nexport interface MainNavProps {\r\n    authService: AuthService;\r\n}\r\n\r\nexport interface MainNavState {\r\n    isLoggedIn: boolean;\r\n}\r\n\r\nclass MainNav extends React.Component<MainNavProps, MainNavState> {\r\n\r\n    private _subscription: any;\r\n\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        console.log(props);\r\n        this.state = {\r\n            isLoggedIn: false\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        this._subscription = this.props.authService.getAuthenticationStream().subscribe(isAuthenticated => {\r\n            this.state = {\r\n                isLoggedIn: isAuthenticated\r\n            };\r\n            if (this.state.isLoggedIn) {\r\n                hashHistory.push('/createjob');\r\n            }\r\n            else {\r\n                hashHistory.push('/');\r\n            }\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._subscription.dispose();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.state.isLoggedIn ?\r\n                <Navbar collapseOnSelect>\r\n                    <Navbar.Header>\r\n                        <Navbar.Brand>\r\n                            <span>Simple Kafka-Uber</span>\r\n                        </Navbar.Brand>\r\n                        <Navbar.Toggle />\r\n                    </Navbar.Header>\r\n                    <Navbar.Collapse>\r\n                        <Nav pullRight>\r\n                            <NavItem eventKey={2} href='#/logout'>Logout</NavItem>\r\n                            <NavItem eventKey={2} href='#/createjob'>Create Job</NavItem>\r\n                            <NavItem eventKey={2} href='#/viewjob'>View Job</NavItem>\r\n                            <NavItem eventKey={2} href='#/viewrating'>View Rating</NavItem>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar> : \r\n                <Navbar pullRight collapseOnSelect>\r\n                    <Navbar.Header>\r\n                        <Navbar.Brand>\r\n                            <span>Simple Kafka-Uber</span>\r\n                        </Navbar.Brand>\r\n                        <Navbar.Toggle />\r\n                    </Navbar.Header>\r\n                    <Navbar.Collapse>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nclass App extends React.Component<undefined, undefined> {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <MainNav authService={authService}/>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nReactDOM.render((\r\n    <Router history={hashHistory}>\r\n        <Route component={App}>\r\n            <Route path=\"/\" component={Login} authService={authService}/>\r\n            <Route path=\"/register\" component={Register}/>\r\n            <Route path=\"/logout\" component={Logout} authService={authService}/>\r\n            <Route path=\"/createjob\" component={CreateJob}/>\r\n            <Route path=\"/viewjob\" component={ViewJob}/>\r\n            <Route path=\"/viewrating\" component={ViewRating}/>\r\n        </Route>\r\n    </Router>\r\n), document.getElementById('root'));\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.tsx\n\n\n// WEBPACK FOOTER //\n// webpack:///./src/index.tsx","import { injectable, inject } from \"inversify\";\r\nimport { TYPES } from \"../types\";\r\nimport Rx from 'rx';  \r\n\r\n@injectable()\r\nexport class AuthService {\r\n\r\n    private _isAuthenticated: boolean;\r\n    private _authenticatedSubject = new Rx.Subject<boolean>();\r\n\r\n    constructor() {\r\n    }\r\n\r\n    clearUser = () => {\r\n        this._isAuthenticated = false;\r\n        sessionStorage.removeItem('currentUserProfile');\r\n        this._authenticatedSubject.onNext(false);\r\n    }\r\n\r\n    storeUser = (currentUser) => {\r\n        this._isAuthenticated = true;\r\n        sessionStorage.setItem('currentUserProfile', currentUser);\r\n        this._authenticatedSubject.onNext(true);\r\n    }\r\n\r\n    userName = () => {\r\n        var user = JSON.parse(sessionStorage.getItem('currentUserProfile'));\r\n        return user.fullName;\r\n    }\r\n\r\n    isAuthenticated = () => {\r\n        return this._isAuthenticated;\r\n    }\r\n\r\n    getAuthenticationStream = () => {\r\n        return this._authenticatedSubject.asObservable();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/AuthService.ts\n\n\n// WEBPACK FOOTER //\n// webpack:///./src/services/AuthService.ts","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport * as _ from \"lodash\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport\r\n{\r\n    Button, \r\n    Modal\r\n} from \"react-bootstrap\";\r\n\r\n\r\nexport interface OkDialogProps {\r\n    headerText: string;\r\n    bodyText: string; \r\n    open: boolean;\r\n    okCallBack() : void;\r\n}\r\n\r\nexport interface OkDialogState {\r\n    showModal: boolean;\r\n}\r\n\r\n\r\nexport class OkDialog extends React.Component<OkDialogProps, OkDialogState> {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        //set initial state\r\n        this.state = {\r\n            showModal: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.open === true) {\r\n            this.setState({ showModal: true });\r\n        }\r\n    }\r\n\r\n    _okClicked = () => {\r\n        this.setState({ showModal: false });\r\n        this.props.okCallBack();\r\n    }\r\n\r\n    _close = () => {\r\n        this.setState({ showModal: false });\r\n        this.props.okCallBack();\r\n    }\r\n\r\n    _open = () => {\r\n        this.setState({ showModal: true });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"leftFloat\">\r\n\r\n                <Modal show={this.state.showModal} onHide={this._close}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{ this.props.headerText }</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <h4>{this.props.bodyText}</h4>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button\r\n                            type='button'\r\n                            bsSize='small'\r\n                            bsStyle='primary'\r\n                            onClick={this._okClicked}>Ok</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/OkDialog.tsx\n\n\n// WEBPACK FOOTER //\n// webpack:///./src/components/OkDialog.tsx"],"sourceRoot":""}